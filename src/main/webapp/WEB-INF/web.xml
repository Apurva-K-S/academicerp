<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <servlet>
        <servlet-name>Academic ERP Project</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>com.example.erp</param-value>
        </init-param>
        <init-param>
            <param-name>jersey.config.server.provider.classnames</param-name>
            <param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Academic ERP Project</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

</web-app>

        <!--
            this file is used to specify which file must be called first when we run, because we may have many different .html files.
            and inside this we must have init-params. these tell us where to look for webservices in your hibernate code. what are the packages we have to look.
            and dont forget to create a package before starting anything. inside this package we will get
            1. bean : all database objects will come
            2. controller : classes for all the requests that we make.
            3. service: all business logic. rollno: MT2020 tho start avvali.. we have to write there.
            4. DAO: Data access object: in this we have classes which would be dng transactions with our mysql. "alter/findall etc".
            5. utils: communication to DB.

            jersey.config.server.provider.packages => sets limit => looks for com.example.erp package. look for bean/controller and all from this pckage only ani cheptundi idi.
            searches recursively.

            <param-name>jersey.config.server.provider.classnames</param-name> => if we have our own dependencies or anything set extra then we have to specify it here.
                    like multipart we have set it few minutes before. we have to add it here.

            when servlet is done we have to map it. both must have same name. in servlet-mapping and servlet.

            we r looking for an URL pattern. /api/* . we cant have it like /* . because if we have it like this then our index.html will never be opened.
            form_validation fetch lo we sudnt give /api/ we sud only give api/
        -->